<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{053CD098-BC8D-4695-8F84-E6B75F98F58E}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <RootNamespace>Maze</RootNamespace>
    <AssemblyName>Maze</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WarningLevel>4</WarningLevel>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xaml">
      <RequiredTargetFramework>4.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="WindowsBase" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include="App.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include="MainWindow.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
    <Compile Include="App.xaml.cs">
      <DependentUpon>App.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="MainWindow.xaml.cs">
      <DependentUpon>MainWindow.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
</Project>
Imports System.Windows.Media.Media3D
Imports System.Windows.Media.Animation
 
    Private Enum Tristate
        Neg = -1
        None = 0
        Pos = 1
    End Enum
 
    Private newpcam As New Media3D.PerspectiveCamera()
    Private Pos1 As New Media3D.Point3D(-40, 40, 40)
    Private Dir1 As New Media3D.Point3D(40, -40, -40)
    Private timer As System.Windows.Threading.DispatcherTimer
    Private X As Double = -40
    Private Y As Double = 40
    Private Z As Double = 40
    Private XMove As Tristate
    Private YMove As Tristate
    Private ZMove As Tristate
 
    Private Sub SetX(ByVal Val As Double)
        Pos1.X = Val
        Dir1.X = -Val
    End Sub
 
    Private Sub SetY(ByVal Val As Double)
        Pos1.Y = Val
        Dir1.Y = -Val
    End Sub
 
    Private Sub SetZ(ByVal Val As Double)
        Pos1.Z = Val
        Dir1.Z = -Val
    End Sub
 
    Private Sub Window1_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Input.KeyEventArgs) Handles Me.PreviewKeyDown
        Select Case e.Key
            Case Key.Up
                YMove = Tristate.Pos
            Case Key.Down
                YMove = Tristate.Neg
            Case Key.Left
                XMove = Tristate.Neg
            Case Key.Right
                XMove = Tristate.Pos
            Case Key.PageUp
                ZMove = Tristate.Neg
            Case Key.PageDown
                ZMove = Tristate.Pos
        End Select
    End Sub
 
    Private Sub Window1_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Input.KeyEventArgs) Handles Me.PreviewKeyUp
        Select Case e.Key
            Case Key.Up, Key.Down
                YMove = Tristate.None
            Case Key.Left, Key.Right
                XMove = Tristate.None
            Case Key.PageUp,Key.PageDown
                ZMove = Tristate.None
        End Select
    End Sub
 
    Sub timer_Tick(ByVal sender As Object, ByVal e As EventArgs)
        If XMove <> Tristate.None Then
            X += XMove
            SetX(X)
        End If
        If YMove <> Tristate.None Then
            Y += YMove
            SetY(Y)
        End If
        If ZMove <> Tristate.None Then
            Z += ZMove
            SetZ(Z)
        End If
        newpcam.Position = Pos1
        newpcam.LookDirection = Dir1
    End Sub
 
    Private Sub Window1_Loaded(ByVal sender As System.Object, ByVal e As System.Windows.RoutedEventArgs) Handles MyBase.Loaded
        Viewport3D1.Camera = newpcam
        SetX(X)
        SetY(Y)
        SetZ(Z)
        newpcam.Position = Pos1
        newpcam.LookDirection = Dir1
 
        Dim Cube_ani As New DoubleAnimation(0, 359, TimeSpan.FromSeconds(2))
 
        Dim Cube_rot As New AxisAngleRotation3D()
        Cube_rot.Axis = New Vector3D(0, 1, 0)
 
        Viewport3D1.Children.Item(0).Transform = New RotateTransform3D(Cube_rot, 5, 5, 5)
        Viewport3D1.Children.Item(1).Transform = New RotateTransform3D(Cube_rot, 5, -5, -5)
        Viewport3D1.Children.Item(2).Transform = New RotateTransform3D(Cube_rot, -5, -5, 5)
        Viewport3D1.Children.Item(3).Transform = New RotateTransform3D(Cube_rot, -5, 5, -5)
 
        Cube_rot.BeginAnimation(AxisAngleRotation3D.AngleProperty, Cube_ani)
 
        timer = New System.Windows.Threading.DispatcherTimer()
        timer.Interval = TimeSpan.FromMilliseconds(16)
        AddHandler timer.Tick, AddressOf timer_Tick
        Me.timer.Start()
    End Sub